services:
  node-exporter:
    hostname: node-exporter
    image: prom/node-exporter:latest
    ports:
      - '${NODE_EXPORTER_PORT}:9100'
    networks:
      - monitoring_network

  nginx-app:
    container_name: nginx-app
    image: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf
    labels:
      logging: 'promtail'
      logging_jobname: 'containerlogs'
    ports:
      - 8080:80
    networks:
      - monitoring_network

  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - '${GRAFANA_PORT}:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring_network

  loki:
    image: grafana/loki:latest
    ports:
      - '${LOKI_PORT}:3100'
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki
    networks:
      - monitoring_network

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/config.yaml:/etc/promtail/config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    networks:
      - monitoring_network

  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - '${PROMETHEUS_PORT}:9090'
    networks:
      - monitoring_network
    depends_on:
      - node-exporter

networks:
  monitoring_network:
    driver: bridge

volumes:
  grafana_data:
  prometheus_data:
  loki-data:
